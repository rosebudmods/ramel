plugins {
    id 'idea'
    id 'maven-publish'
    id 'me.modmuss50.mod-publish-plugin' version '0.7.4' apply false
    id 'net.neoforged.moddev' version '2.0.34-beta' apply false
}

version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

def targetJavaVersion = 21

subprojects {
    apply plugin: 'java-library'
    project.group = rootProject.group
    project.version = rootProject.version

    repositories {
        maven { url = 'https://maven.quiltmc.org/repository/release' }
        maven { url = 'https://maven.terraformersmc.com/releases' }
        maven { url = 'https://repo.sleeping.town' }
        maven {
            name = "ParchmentMC"
            url = "https://maven.parchmentmc.org"
            content {
                includeGroupAndSubgroups "org.parchmentmc"
            }
        }
    }

    java {
        withSourcesJar()
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = targetJavaVersion
    }

    javadoc {
        // need this so javadoc doesnt complain about mixin's @reason
        options.tags = ['reason']
    }

    base {
        archivesName = "${rootProject.archives_base_name}-${project.name}"
    }

    jar {
        from('LICENSE') {
            rename { "LICENSE_${rootProject.archives_base_name}"}
        }
    }

    sourcesJar {
        from('LICENSE') {
            rename { "LICENSE_${rootProject.archives_base_name}" }
        }
    }

    processResources {
        filteringCharset 'UTF-8'

        def expandProps = [
                'version': version,
                'minecraft_version': project.minecraft_version,
                'mod_id': project.mod_id,
                'maven_group_id': project.maven_group,
                'website_url': project.website_url,
                'sources_url': project.sources_url,
                'issue_tracker_url': project.issue_tracker_url,
                'discord_url': project.discord_url,

                'fabric_loader_version': project.fabric_loader_version,
                'neoforge_version': project.neoforge_version,
                'java_version': targetJavaVersion
        ]

        filesMatching(['pack.mcmeta', '*.mod.json', 'META-INF/*mods.toml', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }

    publishing {
        publications {
            "mavenJava_${project.name}"(MavenPublication) {
                artifactId base.archivesName.get()
                from components.java
            }
        }
    }
}

allprojects {
    // IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
    idea {
        module {
            downloadSources = true
            downloadJavadoc = true
        }
    }
}
